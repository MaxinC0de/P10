swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Returns all user's transactions
      produces:
        - application/json
      responses:
        '200':
          description: Returns an array of all transactions
          schema:
              type: object
              example:
                date: 
                description: 
                balanceAmount: 
        '500':
          description: Unexpected Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      parameters:
        - name: accountId
          type: string
          in: path
          required: true
          description: id of account to get transactions from
      tags:
        - Transactions Module
      summary: Returns all transactions of one account in particular
      produces:
        - application/json
      responses:
        '200':
          description: Returns an array of all transactions
          schema:
              type: object
              example:
                date: 
                description: 
                balanceAmount: 
        '500':
          description: Unexpected Error
  /transactions/{transactionsId}:
    get:
      security:
        - Bearer: []
      parameters:
        - name: transactionsId
          type: string
          in: path
          required: true
          description: id of transaction to get
      tags:
        - Transactions Module
      summary: Returns a transaction in particular
      produces:
        - application/json
      responses:
        '200':
          description: Returns an array of all transactions
          schema:
              type: object
              example:
                date: 
                description: 
                balanceAmount:
        '500':
          description: Unexpected Error
  /transactions/categories:
    get:
      tags:
        - Transactions Module
      summary: Returns all transactions' categories
      produces:
        - application/json
      responses:
        '200':
          description: Returns all transactions' categories
          schema:
              type: object
              properties:
                food:
                  type: integer
                  format: int64
                  example: 
                house:
                  type: string
                  example: 
        '500':
          description: Unexpected Error
  /transactions{id}/categories:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add a category to the transaction if no one is defined yet
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: id of transaction to modify
      produces:
        - application/json
      responses:
        '200':
          description: Add a category to the transaction
          schema:
              type: object
              example:
                category: some category
        '401': 
          description: Unauthorized
        '500':
          description: Unexpected Error
    put: 
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Change category of transaction
      parameters:
        - name: id
          type: string
          in: path
          required: true
          description: id of transaction to modify
      produces:
        - application/json
      responses:
        '200':
          description: Category Changed
        '401': 
          description: Unauthorized
        '500':
          description: Unexpected Error
  /transactions/{transactionsId}/description: 
    put: 
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Change description of transaction
      parameters:
        - name: transactionsId
          type: string
          in: path
          required: true
          description: id of transaction to modify
      produces:
        - application/json
      responses:
        '200':
          description: Description Changed
        '401': 
          description: Unauthorized
        '500':
          description: Unexpected Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
